"""Add ESGPillarWeight table

Revision ID: 0397556dab62
Revises: 09a072684923
Create Date: 2025-09-20 19:46:50.236034

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0397556dab62'
down_revision: Union[str, Sequence[str], None] = '09a072684923'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('esg_kpi_mapping')
    op.drop_table('esg_metrics')
    op.drop_index(op.f('ix_esg_pillar_scores_id'), table_name='esg_pillar_scores')
    op.drop_table('esg_pillar_scores')
    op.alter_column('esg_kpis', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False,
               existing_server_default=sa.text("'active'::character varying"))
    op.add_column('esg_pillar_weights', sa.Column('pillar_weight', sa.Float(), nullable=False))
    op.create_index(op.f('ix_esg_pillar_weights_id'), 'esg_pillar_weights', ['id'], unique=False)
    op.drop_column('esg_pillar_weights', 'weight')
    op.drop_column('esg_pillar_weights', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('esg_pillar_weights', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('esg_pillar_weights', sa.Column('weight', sa.NUMERIC(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_esg_pillar_weights_id'), table_name='esg_pillar_weights')
    op.drop_column('esg_pillar_weights', 'pillar_weight')
    op.alter_column('esg_kpis', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.create_table('esg_pillar_scores',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pillar', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('pillar_weight', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('pillar_score', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('weighted_contribution', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reporting_period', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('esg_pillar_scores_pkey'))
    )
    op.create_index(op.f('ix_esg_pillar_scores_id'), 'esg_pillar_scores', ['id'], unique=False)
    op.create_table('esg_metrics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reporting_period', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('esg_metrics_pkey'))
    )
    op.create_table('esg_kpi_mapping',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('field_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('kpi_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['kpi_code'], ['esg_kpis.kpi_code'], name=op.f('esg_kpi_mapping_kpi_code_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('esg_kpi_mapping_pkey'))
    )
    # ### end Alembic commands ###
